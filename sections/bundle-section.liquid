{{ 'bundle.css' | asset_url | stylesheet_tag }}
<h1 class="compl-heading">{{ section.settings.heading }}</h1>
<div class="compl-container">
  {%- for block in section.blocks -%}
    {% render 'bundle', card_product: block.settings.product %}
    {% assign total_price = total_price | plus: block.settings.product.price %}
  {% endfor %}
  <div class="total-cont">
    <p>{{ section.settings.paragraph }}: {{ total_price | money }}</p>
    <button type="submit" class="button button--secondary adds-btn">Add to cart</button>
  </div>
</div>

<!--
  <script>


    const addToCartBtn = document.querySelectorAll('.adds-btn');
    const cart = document.querySelector('cart-drawer');

    addToCartBtn.addEventListener('click', addToCart);

    function addToCart () {

    }

        {%- for block in section.blocks -%}
          const productId = {{ block.settings.product.id }}
        {% endfor %}
  </script>

  addToCartAddons.forEach((addOn) => { addOn.addEventListener("click", (event) => { event.preventDefault();

  const productId = addOn.dataset.id; if (addOn.classList.contains('product-selected')) { return; }

  fetch("/cart/add.js", { method: "post", headers: { 'Content-Type': 'application/json', }, body: JSON.stringify({ id:
  productId, quantity: 1, sections: cart.getSectionsToRender().map((section) => section.id) }),

  }) .then((response) => { return response.json(); }) .then((response) => { cart.renderContents(response);
  addOn.classList.add('product-selected'); }) .catch((error) => { console.error('Error:', error); }) .finally(() => { if
  (cart && cart.classList.contains('is-empty')) cart.classList.remove('is-empty'); }); }); });
-->

{% schema %}
{
  "name": "Bundle",
  "tag": "section",
   "class": "container product-container pad",
   "settings": [
  {
      "type": "inline_richtext",
      "id": "heading",
      "default": "Perfectly pairs with",
      "label": "Heading"
    },
     {
      "type": "inline_richtext",
      "id": "paragraph",
      "default": "Total",
      "label": "Total price"
    }
  ],

  "blocks": [
  {
    "type": "featured_product",
    "name": "t:sections.featured-product.name",
    "settings": [
      {
        "type": "product",
        "id": "product",
        "label": "t:sections.featured-product.blocks.featured-product.settings.product.label"
      }
    ]
  }
],
"presets": [
  {
    "name": "Product section",
    "blocks": [
      {
        "type": "featured_product"
      },
      {
        "type": "featured_product"
      },
      {
        "type": "featured_product"
      }

    ]
  }
]
}
{% endschema %}

{% stylesheet %}
{% endstylesheet %}

{% javascript %}
{% endjavascript %}
